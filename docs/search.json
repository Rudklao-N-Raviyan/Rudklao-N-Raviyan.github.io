[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Rudklao (Newz) Raviyan",
    "section": "",
    "text": "LinkedIn\n  \n  \n    \n     Email\n  \n\n      \nHello and Sawasdee ka!\nMy name is Newz and a recent graduate in Statistics. Currently based in Auckland, New Zealand.\n\n\n\n\n\nEvents - Coordinator/ Management Trainee | Shangri-La Hotel, Chiang Mai, Thailand. (2018 - 2020)\nAfter Scool Elementary School Teacher | Hapdo Elementary, Dangjin, South Korea (2015 - 2017)\n\n\n\n\n\nGraduate Diploma in Arts - Statistics, University of Auckland, New Zealand. (2022 - 2023)\nGraduate Diploa in Business Studies, Massey University, New Zealand. (2018 - 2022)\nBachelor of Science - Biomedical Science, University of Auckland, New Zealand. (2012 - 2015)"
  },
  {
    "objectID": "index.html#work-experience",
    "href": "index.html#work-experience",
    "title": "Rudklao (Newz) Raviyan",
    "section": "",
    "text": "Events - Coordinator/ Management Trainee | Shangri-La Hotel, Chiang Mai, Thailand. (2018 - 2020)\nAfter Scool Elementary School Teacher | Hapdo Elementary, Dangjin, South Korea (2015 - 2017)"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Rudklao (Newz) Raviyan",
    "section": "",
    "text": "Graduate Diploma in Arts - Statistics, University of Auckland, New Zealand. (2022 - 2023)\nGraduate Diploa in Business Studies, Massey University, New Zealand. (2018 - 2022)\nBachelor of Science - Biomedical Science, University of Auckland, New Zealand. (2012 - 2015)"
  },
  {
    "objectID": "stats_330.html",
    "href": "stats_330.html",
    "title": "Stats 330",
    "section": "",
    "text": "Assignment Showcase:\nStats 330: Statistical Modelling\nlibrary(s20x)\n\nWarning: package 's20x' was built under R version 4.3.2\n\nlibrary(mgcv)\n\nLoading required package: nlme\n\n\nThis is mgcv 1.8-42. For overview type 'help(\"mgcv-package\")'.\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following object is masked from 'package:nlme':\n\n    collapse\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(MuMIn)\n\nWarning: package 'MuMIn' was built under R version 4.3.2\n\nlibrary(glmtoolbox)\n\nWarning: package 'glmtoolbox' was built under R version 4.3.2\n\n\n\nAttaching package: 'glmtoolbox'\n\n\nThe following object is masked from 'package:MuMIn':\n\n    QIC\n\nlibrary(statmod)\n\nWarning: package 'statmod' was built under R version 4.3.2\n\nlibrary(MASS)\n\n\nAttaching package: 'MASS'\n\n\nThe following object is masked from 'package:dplyr':\n\n    select\n\nlibrary(ggplot2)"
  },
  {
    "objectID": "stats_330.html#researchers-wanted-to-use-this-dataset-to-explore-1-how-are-the-rate-of-death-or-hospitalization-due-to-heart-failure-and-the-ejection-fraction-related-and-2-is-this-relationship-the-same-for-people-taking-digoxin-and-placebo-build-a-descriptive-model-to-answer-the-question.-your-analysis-may-involve-data-exploration-model-building-model-checking-and-interpretation.",
    "href": "stats_330.html#researchers-wanted-to-use-this-dataset-to-explore-1-how-are-the-rate-of-death-or-hospitalization-due-to-heart-failure-and-the-ejection-fraction-related-and-2-is-this-relationship-the-same-for-people-taking-digoxin-and-placebo-build-a-descriptive-model-to-answer-the-question.-your-analysis-may-involve-data-exploration-model-building-model-checking-and-interpretation.",
    "title": "Stats 330",
    "section": "Researchers wanted to use this dataset to explore 1) how are the rate of death or hospitalization due to heart failure and the ejection fraction related? and 2) is this relationship the same for people taking Digoxin and placebo? Build a descriptive model to answer the question. Your analysis may involve data exploration, model building, model checking and interpretation.",
    "text": "Researchers wanted to use this dataset to explore 1) how are the rate of death or hospitalization due to heart failure and the ejection fraction related? and 2) is this relationship the same for people taking Digoxin and placebo? Build a descriptive model to answer the question. Your analysis may involve data exploration, model building, model checking and interpretation.\n\npath = file.choose()\ndata.df = read.csv(path)\nsummary(data.df[,c(\"dwhf\",\"ejf_per\",\"trtmt1\")])\n\n      dwhf           ejf_per          trtmt1      \n Min.   :0.0000   Min.   : 3.00   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:22.00   1st Qu.:0.0000  \n Median :0.0000   Median :29.00   Median :0.0000  \n Mean   :0.3412   Mean   :28.64   Mean   :0.4983  \n 3rd Qu.:1.0000   3rd Qu.:35.00   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :45.00   Max.   :1.0000  \n\nplot(dwhf ~ ejf_per, data = data.df)\n\n\n\nq1=data.df[,c(\"dwhf\",\"ejf_per\",\"trtmt1\")]\nstr(q1)\n\n'data.frame':   4000 obs. of  3 variables:\n $ dwhf   : int  1 1 1 0 1 0 0 0 0 0 ...\n $ ejf_per: int  40 12 36 31 15 45 30 39 33 24 ...\n $ trtmt1 : int  0 0 0 1 0 0 1 1 0 1 ...\n\nq1$trtmt1=factor(q1$trtmt1,levels = c(0,1),labels=c(\"Placebo\",\"Digoxin\"))\n\ntmp=q1 %&gt;% group_by(trtmt1,ejf_per) %&gt;% summarise(prop = mean(dwhf),event=sum(dwhf), n = n())\n\n`summarise()` has grouped output by 'trtmt1'. You can override using the\n`.groups` argument.\n\nprint(tmp)\n\n# A tibble: 82 × 5\n# Groups:   trtmt1 [2]\n   trtmt1  ejf_per  prop event     n\n   &lt;fct&gt;     &lt;int&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt;\n 1 Placebo       3 1         1     1\n 2 Placebo       4 1         1     1\n 3 Placebo       5 1         1     1\n 4 Placebo       8 0.714     5     7\n 5 Placebo       9 0.75      3     4\n 6 Placebo      10 0.667    12    18\n 7 Placebo      11 0.833    10    12\n 8 Placebo      12 0.526    10    19\n 9 Placebo      13 0.731    19    26\n10 Placebo      14 0.731    19    26\n# ℹ 72 more rows\n\nggplot(tmp,aes(x=ejf_per,y=prop, color=trtmt1))+geom_point()+xlab(\"Ejection Fraction\") + labs(color='Treatment')+ ylab(\"Probability\")\n\n\n\n\nFirst we start exploring the data by looking at the summary and types of variables of our interested variables. We gathered that ejf_per is an integer while trtmt1 is the categorical data. The dwhf variable is described by R that it is an integer but infact, it is a categorical factor as it takes the value of either 0 or 1. From the raw data, we are interested in the treatment the patient actually received because patients may be allocate to placebo or Digoxin group but they may actually received different treatment from their allocated group, hence treatment1 variable was used in this analysis.\nThen we plot a graph to see the relationship between the ejf_per and dwhf. Graph showed that the scatters are either at 0 or 1 hence, the response variable(dwhf) have a binomial distribution. Next we grouped the data into ejeculation fraction rate and treatment received. From the graph, we can see that the lower the ejection fraction, the higher probability of death with health failure. The trend exponentialy decreased as the ejection fraction increases however, both placebo and digoxin group seems to performed similary."
  },
  {
    "objectID": "stats_330.html#plot-and-explore-data-model-selections",
    "href": "stats_330.html#plot-and-explore-data-model-selections",
    "title": "Stats 330",
    "section": "plot and explore data, model selections",
    "text": "plot and explore data, model selections\n\nejection.fit1 = glm(dwhf ~ ejf_per + trtmt1, data = data.df, family = \"binomial\")\n\nsummary(ejection.fit1)\n\n\nCall:\nglm(formula = dwhf ~ ejf_per + trtmt1, family = \"binomial\", data = data.df)\n\nCoefficients:\n             Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)  0.714408   0.119111   5.998 2.00e-09 ***\nejf_per     -0.042118   0.003933 -10.710  &lt; 2e-16 ***\ntrtmt1      -0.386407   0.068130  -5.672 1.41e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 5134.9  on 3999  degrees of freedom\nResidual deviance: 4984.2  on 3997  degrees of freedom\nAIC: 4990.2\n\nNumber of Fisher Scoring iterations: 4\n\n\nAfter the data exploration, we are continuing with model selection. First we fitted the interested variable, the treatment patient received, and the response variable, death with hearth failure (ejection.fit1). It is the full model and from the summary, all the variables included in the model have significant relationship with the response variable due to the p-value.\n\ndata.gam.fit = gam(dwhf ~ s(ejf_per) + trtmt1 , family = \"binomial\", data = data.df)\nsummary(data.gam.fit)\n\n\nFamily: binomial \nLink function: logit \n\nFormula:\ndwhf ~ s(ejf_per) + trtmt1\n\nParametric coefficients:\n            Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept) -0.49050    0.04675  -10.49  &lt; 2e-16 ***\ntrtmt1      -0.38464    0.06820   -5.64  1.7e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nApproximate significance of smooth terms:\n             edf Ref.df Chi.sq p-value    \ns(ejf_per) 2.351  2.965  121.5  &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nR-sq.(adj) =   0.04   Deviance explained = 3.09%\nUBRE = 0.24624  Scale est. = 1         n = 4000\n\nplot(data.gam.fit)\n\n\n\nejection.gam.fit2 = glm(dwhf ~ ejf_per + I(ejf_per^2) + trtmt1 , family = \"binomial\", data = data.df)\nsummary(ejection.gam.fit2)\n\n\nCall:\nglm(formula = dwhf ~ ejf_per + I(ejf_per^2) + trtmt1, family = \"binomial\", \n    data = data.df)\n\nCoefficients:\n               Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)   1.5059883  0.3020621   4.986 6.17e-07 ***\nejf_per      -0.1058243  0.0226131  -4.680 2.87e-06 ***\nI(ejf_per^2)  0.0011530  0.0004017   2.870   0.0041 ** \ntrtmt1       -0.3840047  0.0682367  -5.628 1.83e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 5134.9  on 3999  degrees of freedom\nResidual deviance: 4976.0  on 3996  degrees of freedom\nAIC: 4984\n\nNumber of Fisher Scoring iterations: 4\n\nconfint(ejection.gam.fit2)\n\nWaiting for profiling to be done...\n\n\n                     2.5 %       97.5 %\n(Intercept)   0.9158869208  2.100623467\nejf_per      -0.1502557536 -0.061573623\nI(ejf_per^2)  0.0003651388  0.001940529\ntrtmt1       -0.5179565625 -0.250438830\n\n\nNext we explore the model if there are any quadratic relationship requirement. We use gam funciton to do so (data.gam.fit). From the summary of the gam plot and the plot itself, we can see that, we can almost fit the straightline between the dotted lines but the edf is greater than 1, hence it suggests that we indeed need a quadratic term for the ejf_per variable. From the summary, the p-value for the 2nd order quadratic term on ejf_per variable is significant.\n\nejection.fit2 = glm(dwhf ~ (ejf_per + I(ejf_per^2)) * trtmt1, data = data.df, family = \"binomial\")\nsummary(ejection.fit2)\n\n\nCall:\nglm(formula = dwhf ~ (ejf_per + I(ejf_per^2)) * trtmt1, family = \"binomial\", \n    data = data.df)\n\nCoefficients:\n                      Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)          1.7505128  0.4271430   4.098 4.16e-05 ***\nejf_per             -0.1137689  0.0320109  -3.554 0.000379 ***\nI(ejf_per^2)         0.0011271  0.0005661   1.991 0.046485 *  \ntrtmt1              -0.8567364  0.6041512  -1.418 0.156167    \nejf_per:trtmt1       0.0133803  0.0454179   0.295 0.768297    \nI(ejf_per^2):trtmt1  0.0001173  0.0008059   0.145 0.884318    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 5134.9  on 3999  degrees of freedom\nResidual deviance: 4969.5  on 3994  degrees of freedom\nAIC: 4981.5\n\nNumber of Fisher Scoring iterations: 4\n\nejection.fit3 = glm(dwhf ~ ejf_per * trtmt1 + I(ejf_per^2), data = data.df, family = \"binomial\")\nsummary(ejection.fit3)\n\n\nCall:\nglm(formula = dwhf ~ ejf_per * trtmt1 + I(ejf_per^2), family = \"binomial\", \n    data = data.df)\n\nCoefficients:\n                 Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)     1.7910808  0.3240355   5.527 3.25e-08 ***\nejf_per        -0.1169941  0.0231165  -5.061 4.17e-07 ***\ntrtmt1         -0.9381354  0.2283135  -4.109 3.97e-05 ***\nI(ejf_per^2)    0.0011850  0.0004031   2.940  0.00328 ** \nejf_per:trtmt1  0.0198905  0.0078076   2.548  0.01085 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 5134.9  on 3999  degrees of freedom\nResidual deviance: 4969.5  on 3995  degrees of freedom\nAIC: 4979.5\n\nNumber of Fisher Scoring iterations: 4\n\n\nLastly, we are interested in the interaction term between the ejf_per variable and the trtmt1 by fitting the ejection.fit2 model. From the summary, the p-value for the model is insignificant and we will not include any interaction term in our model and hence, our final model is ejection.gam.fit2.\n\nplot(predict(ejection.gam.fit2),residuals(ejection.gam.fit2, type = \"deviance\"))\n\n\n\nplot(predict(ejection.gam.fit2), qresiduals(ejection.gam.fit2))\n\n\n\nset.seed(123); Nsim = 1e3\nejection.devs = numeric(Nsim); nr = nrow(data.df)\nfor (i in 1:Nsim){\n  mos_bin = rbinom(nr, prob = predict(ejection.gam.fit2, type = \"response\"), 1)\n  mod_i = glm(mos_bin ~ ejf_per + I(ejf_per^2) + trtmt1, data = data.df, family = \"binomial\")\n  ejection.devs[i] = deviance(mod_i)\n  \n}\ncat(\"GOF parametric bootstrap p-value for binomial model is\") \n\nGOF parametric bootstrap p-value for binomial model is\n\n1-mean(ejection.devs &lt; deviance(ejection.gam.fit2))\n\n[1] 0.485\n\n\nAfter our final model selection, we conduct the Goodness of fit and model assumption via randomised quantile residual plot due to the data being sparse. It showed an approximate normal distribution scatters with small fraction of scatters greater than +/- 3 on y-axis. After the assumption is satisfied, we check the goodness of fit via parametric bootstrap where the p-value showed that this model is adequate."
  },
  {
    "objectID": "stats_330.html#conclusion",
    "href": "stats_330.html#conclusion",
    "title": "Stats 330",
    "section": "Conclusion",
    "text": "Conclusion\nFrom the model selection, our final model is:\n$ logit(\\mu_i) = \\beta_0 + \\beta1 \\times ejf_i + \\beta_2 \\times ejf\\_per_i^2 + \\beta_3 \\times treatment_i $ where $ Y ~ Binomial (n_i, p_i) $\nWhere the $ logit(\\mu_i) $ is the log odds of participant death or hospitalization due to heath failure. $ ejf\\_ per $ is the ejection fraction (in percent) and $ \\beta_3 $ is a dummy variable that take the value of 1 when treatment_i is Dignoxin and 0 when the treatment is placebo.\nAccording to our research questions on how are the rate of death or hospitalization due to heart failure and the ejection fraction related. From out study, we can condluded that the relationship is quadratic and another question is whrher the relationship is the same for people taking Dignoxin and placebo. From the study, it seems to be that, if the participant received the Dignoxin treatment, the log odds of death or hospitalization is decrease by 0.38."
  },
  {
    "objectID": "stats_330.html#conduct-an-appropriate-analysis-to-access-whether-taking-digoxin-can-change-the-rate-of-death-or-hospitalization-due-to-heart-failure.-youranalysis-may-involve-data-exploration-model-building-model-checking-and-interpretation.",
    "href": "stats_330.html#conduct-an-appropriate-analysis-to-access-whether-taking-digoxin-can-change-the-rate-of-death-or-hospitalization-due-to-heart-failure.-youranalysis-may-involve-data-exploration-model-building-model-checking-and-interpretation.",
    "title": "Stats 330",
    "section": "Conduct an appropriate analysis to access whether taking digoxin can change the rate of death or hospitalization due to heart failure. Youranalysis may involve data exploration, model building, model checking and interpretation.",
    "text": "Conduct an appropriate analysis to access whether taking digoxin can change the rate of death or hospitalization due to heart failure. Youranalysis may involve data exploration, model building, model checking and interpretation.\n\ndata.df = read.csv(path)\n\ndata.df$trtmt1 = factor(data.df$trtmt1, levels = c(0,1), labels = c(\"Placebo\", \"Dignoxin\"))\ndata.df$trtmt = factor(data.df$trtmt, levels = c(0,1), labels = c(\"Placebo\", \"Dignoxin\"))\ndata.df$sex = factor(data.df$sex, levels = c(1,2), labels = c(\"Men\", \"Women\"))\ndata.df$diabetes = factor(data.df$diabetes, levels = c(0,1), labels = c(\"Normal\", \"Diabetes\"))\ndata.df$diguse = factor(data.df$diguse, levels = c(0,1), labels = c(\"No\", \"Yes\"))\n\n\ndata.age=data.df %&gt;% group_by(trtmt,age) %&gt;% summarise(prop = mean(dwhf),event=sum(dwhf), n = n())\n\n`summarise()` has grouped output by 'trtmt'. You can override using the\n`.groups` argument.\n\nggplot(data.age,aes(x=age,y=prop, color=trtmt))+geom_point()+xlab(\"age\") + labs(color='Treatment')+ ylab(\"Probability\")\n\n\n\ndata.ejf=data.df %&gt;% group_by(trtmt,ejf_per) %&gt;% summarise(prop = mean(dwhf),event=sum(dwhf), n = n())\n\n`summarise()` has grouped output by 'trtmt'. You can override using the\n`.groups` argument.\n\nggplot(data.ejf,aes(x=ejf_per,y=prop, color=trtmt))+geom_point()+xlab(\"ejeculation fraction\") + labs(color='Treatment')+ ylab(\"Probability\")\n\n\n\ndata.sex=data.df %&gt;% group_by(trtmt,sex) %&gt;% summarise(prop = mean(dwhf))\n\n`summarise()` has grouped output by 'trtmt'. You can override using the\n`.groups` argument.\n\nprint(data.sex)\n\n# A tibble: 4 × 3\n# Groups:   trtmt [2]\n  trtmt    sex    prop\n  &lt;fct&gt;    &lt;fct&gt; &lt;dbl&gt;\n1 Placebo  Men   0.388\n2 Placebo  Women 0.371\n3 Dignoxin Men   0.290\n4 Dignoxin Women 0.324\n\ndata.diabetes=data.df %&gt;% group_by(trtmt, diabetes) %&gt;% summarise(prop = mean(dwhf))\n\n`summarise()` has grouped output by 'trtmt'. You can override using the\n`.groups` argument.\n\nprint(data.diabetes)\n\n# A tibble: 4 × 3\n# Groups:   trtmt [2]\n  trtmt    diabetes  prop\n  &lt;fct&gt;    &lt;fct&gt;    &lt;dbl&gt;\n1 Placebo  Normal   0.401\n2 Placebo  Diabetes 0.340\n3 Dignoxin Normal   0.296\n4 Dignoxin Diabetes 0.302\n\ndata.dig=data.df %&gt;% group_by(trtmt, diguse) %&gt;% summarise(prop = mean(dwhf))\n\n`summarise()` has grouped output by 'trtmt'. You can override using the\n`.groups` argument.\n\nprint(data.dig)\n\n# A tibble: 4 × 3\n# Groups:   trtmt [2]\n  trtmt    diguse  prop\n  &lt;fct&gt;    &lt;fct&gt;  &lt;dbl&gt;\n1 Placebo  No     0.330\n2 Placebo  Yes    0.452\n3 Dignoxin No     0.252\n4 Dignoxin Yes    0.354\n\n\nFirst we explore the data to see the possible relationships between the explanatory variables and the outcome. It seems to be that the age in each Placebo and Dignoxin group all have similar possibility of death from heath failure. Similar to the ejection fraction but we can see that the trend is exponentially decreased as the ejection fraction increase so the lower the ejection fraction, the higher the possibility of death form heath failure. However, the placebo and Dignoxin group seems to perform similarly. As for the gender, the probability of death by heath failure seems to be similar whether the participants are male or female and whether the receive Placebo or Dignoxin. Howver, the probability of death from heath failure seems to be lower if the participants do not have diabetes and in Dignoxin group. As fro the previous use of Dignoxin, if the participants has no previous history of Dignoxin use regardless of what treatment group they are allocated to, the probability of death from heath failure seems to be lower and is even more lower then allocate to Dignoxin and similar trend in the previous use of Dignoxin.\n\ndata.gam.fit = gam(dwhf ~ s(ejf_per) + s(age) + trtmt + sex + diabetes + diguse, family = \"binomial\", data = data.df)\nsummary(data.gam.fit)\n\n\nFamily: binomial \nLink function: logit \n\nFormula:\ndwhf ~ s(ejf_per) + s(age) + trtmt + sex + diabetes + diguse\n\nParametric coefficients:\n                 Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)      -0.70050    0.06393 -10.958  &lt; 2e-16 ***\ntrtmtDignoxin    -0.39535    0.06869  -5.756 8.63e-09 ***\nsexWomen          0.12739    0.08175   1.558    0.119    \ndiabetesDiabetes -0.08818    0.07677  -1.149    0.251    \ndiguseYes         0.45241    0.06871   6.584 4.58e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nApproximate significance of smooth terms:\n             edf Ref.df  Chi.sq p-value    \ns(ejf_per) 2.410  3.039 112.816  &lt;2e-16 ***\ns(age)     1.001  1.002   0.334   0.564    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nR-sq.(adj) =  0.0514   Deviance explained = 4.05%\nUBRE = 0.23596  Scale est. = 1         n = 4000\n\nplot(data.gam.fit, page = 1, shade=T)\n\n\n\ndata.fit1 = glm(dwhf ~ ejf_per + age + trtmt + sex + diabetes + diguse, family = \"binomial\", data = data.df)\nsummary(data.fit1)\n\n\nCall:\nglm(formula = dwhf ~ ejf_per + age + trtmt + sex + diabetes + \n    diguse, family = \"binomial\", data = data.df)\n\nCoefficients:\n                  Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)       0.345830   0.236338   1.463    0.143    \nejf_per          -0.041086   0.003989 -10.300  &lt; 2e-16 ***\nage               0.002022   0.003124   0.647    0.517    \ntrtmtDignoxin    -0.397585   0.068616  -5.794 6.86e-09 ***\nsexWomen          0.132805   0.081697   1.626    0.104    \ndiabetesDiabetes -0.088207   0.076695  -1.150    0.250    \ndiguseYes         0.452137   0.068650   6.586 4.51e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 5134.9  on 3999  degrees of freedom\nResidual deviance: 4934.7  on 3993  degrees of freedom\nAIC: 4948.7\n\nNumber of Fisher Scoring iterations: 4\n\ndata.fit2 = glm(dwhf ~ ejf_per + I(ejf_per^2) + age + trtmt + sex + diabetes + diguse, family = \"binomial\", data = data.df)\nsummary(data.fit2)\n\n\nCall:\nglm(formula = dwhf ~ ejf_per + I(ejf_per^2) + age + trtmt + sex + \n    diabetes + diguse, family = \"binomial\", data = data.df)\n\nCoefficients:\n                   Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)       1.1352313  0.3702836   3.066  0.00217 ** \nejf_per          -0.1032478  0.0227482  -4.539 5.66e-06 ***\nI(ejf_per^2)      0.0011259  0.0004044   2.784  0.00537 ** \nage               0.0017564  0.0031281   0.561  0.57447    \ntrtmtDignoxin    -0.3944491  0.0687194  -5.740 9.47e-09 ***\nsexWomen          0.1259355  0.0817674   1.540  0.12352    \ndiabetesDiabetes -0.0879966  0.0768024  -1.146  0.25190    \ndiguseYes         0.4525657  0.0687472   6.583 4.61e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 5134.9  on 3999  degrees of freedom\nResidual deviance: 4927.0  on 3992  degrees of freedom\nAIC: 4943\n\nNumber of Fisher Scoring iterations: 4\n\nanova(data.fit1, data.fit2, test = \"Chisq\")\n\nAnalysis of Deviance Table\n\nModel 1: dwhf ~ ejf_per + age + trtmt + sex + diabetes + diguse\nModel 2: dwhf ~ ejf_per + I(ejf_per^2) + age + trtmt + sex + diabetes + \n    diguse\n  Resid. Df Resid. Dev Df Deviance Pr(&gt;Chi)   \n1      3993     4934.7                        \n2      3992     4927.0  1   7.7318 0.005426 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\ndata.fit3 = glm(dwhf ~ (ejf_per + I(ejf_per^2))*trtmt + age + trtmt + sex + diabetes*trtmt + diguse, family = \"binomial\", data = data.df)\nsummary(data.fit3)\n\n\nCall:\nglm(formula = dwhf ~ (ejf_per + I(ejf_per^2)) * trtmt + age + \n    trtmt + sex + diabetes * trtmt + diguse, family = \"binomial\", \n    data = data.df)\n\nCoefficients:\n                                 Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                     1.3010627  0.4771601   2.727  0.00640 ** \nejf_per                        -0.1025636  0.0318672  -3.218  0.00129 ** \nI(ejf_per^2)                    0.0009627  0.0005647   1.705  0.08822 .  \ntrtmtDignoxin                  -0.7097292  0.6079229  -1.167  0.24302    \nage                             0.0016497  0.0031311   0.527  0.59829    \nsexWomen                        0.1300224  0.0819190   1.587  0.11247    \ndiabetesDiabetes               -0.2334890  0.1071522  -2.179  0.02933 *  \ndiguseYes                       0.4534227  0.0688964   6.581 4.67e-11 ***\nejf_per:trtmtDignoxin          -0.0035875  0.0456365  -0.079  0.93734    \nI(ejf_per^2):trtmtDignoxin      0.0003883  0.0008103   0.479  0.63173    \ntrtmtDignoxin:diabetesDiabetes  0.3035428  0.1535482   1.977  0.04806 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 5134.9  on 3999  degrees of freedom\nResidual deviance: 4917.4  on 3989  degrees of freedom\nAIC: 4939.4\n\nNumber of Fisher Scoring iterations: 4\n\noptions(na.action = \"na.fail\")\nall.fits = dredge(data.fit3)\n\nFixed term is \"(Intercept)\"\n\nhead(all.fits)\n\nGlobal model call: glm(formula = dwhf ~ (ejf_per + I(ejf_per^2)) * trtmt + age + \n    trtmt + sex + diabetes * trtmt + diguse, family = \"binomial\", \n    data = data.df)\n---\nModel selection table \n    (Int) dbt dgs ejf_per ejf_per^2 sex trt dbt:trt ejf_per:trt\n767 1.433   +   + -0.1047 0.0009995   +   +       +            \n511 1.543   +   + -0.1134 0.0011570   +   +       +           +\n735 1.453   +   + -0.1049 0.0010210       +       +            \n479 1.560   +   + -0.1135 0.0011750       +       +           +\n637 1.378       + -0.1049 0.0009994   +   +                    \n381 1.489       + -0.1138 0.0011600   +   +                   +\n    I(ejf_per^2):trt df    logLik   AICc delta weight\n767                +  9 -2458.852 4935.7  0.00  0.227\n511                   9 -2458.961 4936.0  0.22  0.204\n735                +  8 -2460.118 4936.3  0.52  0.175\n479                   8 -2460.210 4936.5  0.71  0.159\n637                +  7 -2461.469 4937.0  1.22  0.124\n381                   7 -2461.577 4937.2  1.43  0.111\nModels ranked by AICc(x) \n\nmodel.fit1 = get.models(all.fits, 1)[[1]]\nsummary(model.fit1)\n\n\nCall:\nglm(formula = dwhf ~ diabetes + diguse + ejf_per + I(ejf_per^2) + \n    sex + trtmt + diabetes:trtmt + I(ejf_per^2):trtmt + 1, family = \"binomial\", \n    data = data.df)\n\nCoefficients:\n                                 Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                     1.4334848  0.3144973   4.558 5.16e-06 ***\ndiabetesDiabetes               -0.2340189  0.1071553  -2.184   0.0290 *  \ndiguseYes                       0.4521039  0.0688426   6.567 5.13e-11 ***\nejf_per                        -0.1046623  0.0228043  -4.590 4.44e-06 ***\nI(ejf_per^2)                    0.0009995  0.0004095   2.441   0.0147 *  \nsexWomen                        0.1306861  0.0818843   1.596   0.1105    \ntrtmtDignoxin                  -0.7568879  0.1435191  -5.274 1.34e-07 ***\ndiabetesDiabetes:trtmtDignoxin  0.3050129  0.1535179   1.987   0.0469 *  \nI(ejf_per^2):trtmtDignoxin      0.0003255  0.0001395   2.334   0.0196 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 5134.9  on 3999  degrees of freedom\nResidual deviance: 4917.7  on 3991  degrees of freedom\nAIC: 4935.7\n\nNumber of Fisher Scoring iterations: 4\n\nmodel.fit2 = get.models(all.fits, 2)[[1]]\nsummary(model.fit2)\n\n\nCall:\nglm(formula = dwhf ~ diabetes + diguse + ejf_per + I(ejf_per^2) + \n    sex + trtmt + diabetes:trtmt + ejf_per:trtmt + 1, family = \"binomial\", \n    data = data.df)\n\nCoefficients:\n                                 Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                     1.5427863  0.3282945   4.699 2.61e-06 ***\ndiabetesDiabetes               -0.2340005  0.1071897  -2.183   0.0290 *  \ndiguseYes                       0.4517607  0.0688438   6.562 5.31e-11 ***\nejf_per                        -0.1134032  0.0232166  -4.885 1.04e-06 ***\nI(ejf_per^2)                    0.0011574  0.0004053   2.855   0.0043 ** \nsexWomen                        0.1297966  0.0818695   1.585   0.1129    \ntrtmtDignoxin                  -0.9798958  0.2331599  -4.203 2.64e-05 ***\ndiabetesDiabetes:trtmtDignoxin  0.3050824  0.1535162   1.987   0.0469 *  \nejf_per:trtmtDignoxin           0.0179671  0.0078644   2.285   0.0223 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 5134.9  on 3999  degrees of freedom\nResidual deviance: 4917.9  on 3991  degrees of freedom\nAIC: 4935.9\n\nNumber of Fisher Scoring iterations: 4\n\nmodel.fit3 = get.models(all.fits, 3)[[1]]\nsummary(model.fit3)\n\n\nCall:\nglm(formula = dwhf ~ diabetes + diguse + ejf_per + I(ejf_per^2) + \n    trtmt + diabetes:trtmt + I(ejf_per^2):trtmt + 1, family = \"binomial\", \n    data = data.df)\n\nCoefficients:\n                                 Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                     1.4529743  0.3141386   4.625 3.74e-06 ***\ndiabetesDiabetes               -0.2331058  0.1070943  -2.177   0.0295 *  \ndiguseYes                       0.4530750  0.0688169   6.584 4.59e-11 ***\nejf_per                        -0.1049479  0.0227934  -4.604 4.14e-06 ***\nI(ejf_per^2)                    0.0010211  0.0004091   2.496   0.0126 *  \ntrtmtDignoxin                  -0.7532032  0.1434285  -5.251 1.51e-07 ***\ndiabetesDiabetes:trtmtDignoxin  0.3086010  0.1534389   2.011   0.0443 *  \nI(ejf_per^2):trtmtDignoxin      0.0003182  0.0001393   2.283   0.0224 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 5134.9  on 3999  degrees of freedom\nResidual deviance: 4920.2  on 3992  degrees of freedom\nAIC: 4936.2\n\nNumber of Fisher Scoring iterations: 4\n\nmodel.fit4 = get.models(all.fits, 4)[[1]]\nsummary(model.fit4)\n\n\nCall:\nglm(formula = dwhf ~ diabetes + diguse + ejf_per + I(ejf_per^2) + \n    trtmt + diabetes:trtmt + ejf_per:trtmt + 1, family = \"binomial\", \n    data = data.df)\n\nCoefficients:\n                                Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                     1.560287   0.327941   4.758 1.96e-06 ***\ndiabetesDiabetes               -0.233097   0.107130  -2.176  0.02957 *  \ndiguseYes                       0.452708   0.068819   6.578 4.76e-11 ***\nejf_per                        -0.113513   0.023203  -4.892 9.98e-07 ***\nI(ejf_per^2)                    0.001175   0.000405   2.902  0.00371 ** \ntrtmtDignoxin                  -0.972432   0.232999  -4.174 3.00e-05 ***\ndiabetesDiabetes:trtmtDignoxin  0.308636   0.153438   2.011  0.04428 *  \nejf_per:trtmtDignoxin           0.017607   0.007857   2.241  0.02504 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 5134.9  on 3999  degrees of freedom\nResidual deviance: 4920.4  on 3992  degrees of freedom\nAIC: 4936.4\n\nNumber of Fisher Scoring iterations: 4\n\nmodel.fit5 = get.models(all.fits, 5)[[1]]\nsummary(model.fit5)\n\n\nCall:\nglm(formula = dwhf ~ diguse + ejf_per + I(ejf_per^2) + sex + \n    trtmt + I(ejf_per^2):trtmt + 1, family = \"binomial\", data = data.df)\n\nCoefficients:\n                             Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                 1.3775741  0.3132504   4.398 1.09e-05 ***\ndiguseYes                   0.4512205  0.0687287   6.565 5.19e-11 ***\nejf_per                    -0.1049141  0.0227959  -4.602 4.18e-06 ***\nI(ejf_per^2)                0.0009994  0.0004093   2.441   0.0146 *  \nsexWomen                    0.1311644  0.0818242   1.603   0.1089    \ntrtmtDignoxin              -0.6780705  0.1375817  -4.928 8.29e-07 ***\nI(ejf_per^2):trtmtDignoxin  0.0003313  0.0001394   2.377   0.0175 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 5134.9  on 3999  degrees of freedom\nResidual deviance: 4922.9  on 3993  degrees of freedom\nAIC: 4936.9\n\nNumber of Fisher Scoring iterations: 4\n\nanova(model.fit4, data.fit3, test = \"Chisq\")\n\nAnalysis of Deviance Table\n\nModel 1: dwhf ~ diabetes + diguse + ejf_per + I(ejf_per^2) + trtmt + diabetes:trtmt + \n    ejf_per:trtmt + 1\nModel 2: dwhf ~ (ejf_per + I(ejf_per^2)) * trtmt + age + trtmt + sex + \n    diabetes * trtmt + diguse\n  Resid. Df Resid. Dev Df Deviance Pr(&gt;Chi)\n1      3992     4920.4                     \n2      3989     4917.4  3   2.9996   0.3917\n\nsummary(data.fit3)\n\n\nCall:\nglm(formula = dwhf ~ (ejf_per + I(ejf_per^2)) * trtmt + age + \n    trtmt + sex + diabetes * trtmt + diguse, family = \"binomial\", \n    data = data.df)\n\nCoefficients:\n                                 Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                     1.3010627  0.4771601   2.727  0.00640 ** \nejf_per                        -0.1025636  0.0318672  -3.218  0.00129 ** \nI(ejf_per^2)                    0.0009627  0.0005647   1.705  0.08822 .  \ntrtmtDignoxin                  -0.7097292  0.6079229  -1.167  0.24302    \nage                             0.0016497  0.0031311   0.527  0.59829    \nsexWomen                        0.1300224  0.0819190   1.587  0.11247    \ndiabetesDiabetes               -0.2334890  0.1071522  -2.179  0.02933 *  \ndiguseYes                       0.4534227  0.0688964   6.581 4.67e-11 ***\nejf_per:trtmtDignoxin          -0.0035875  0.0456365  -0.079  0.93734    \nI(ejf_per^2):trtmtDignoxin      0.0003883  0.0008103   0.479  0.63173    \ntrtmtDignoxin:diabetesDiabetes  0.3035428  0.1535482   1.977  0.04806 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 5134.9  on 3999  degrees of freedom\nResidual deviance: 4917.4  on 3989  degrees of freedom\nAIC: 4939.4\n\nNumber of Fisher Scoring iterations: 4\n\nsummary(model.fit4)\n\n\nCall:\nglm(formula = dwhf ~ diabetes + diguse + ejf_per + I(ejf_per^2) + \n    trtmt + diabetes:trtmt + ejf_per:trtmt + 1, family = \"binomial\", \n    data = data.df)\n\nCoefficients:\n                                Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                     1.560287   0.327941   4.758 1.96e-06 ***\ndiabetesDiabetes               -0.233097   0.107130  -2.176  0.02957 *  \ndiguseYes                       0.452708   0.068819   6.578 4.76e-11 ***\nejf_per                        -0.113513   0.023203  -4.892 9.98e-07 ***\nI(ejf_per^2)                    0.001175   0.000405   2.902  0.00371 ** \ntrtmtDignoxin                  -0.972432   0.232999  -4.174 3.00e-05 ***\ndiabetesDiabetes:trtmtDignoxin  0.308636   0.153438   2.011  0.04428 *  \nejf_per:trtmtDignoxin           0.017607   0.007857   2.241  0.02504 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 5134.9  on 3999  degrees of freedom\nResidual deviance: 4920.4  on 3992  degrees of freedom\nAIC: 4936.4\n\nNumber of Fisher Scoring iterations: 4\n\npredictions = predict(model.fit4, type = \"response\")\n\nset.seed(1234)\nNsim = 1e4\nnb.devs = numeric(Nsim); nr = nrow(data.df)\nfor (i in 1:Nsim){\n  out = rbinom(nr, prob = predict(model.fit4, type = \"response\"), 1)\n  data.df$out = out\n  mod_i = glm(out ~ diabetes + diguse + ejf_per + I(ejf_per^2) + \n    trtmt + diabetes*trtmt + ejf_per*trtmt + 1, family = \"binomial\", data = data.df)\n  nb.devs[i] = deviance(mod_i)\n}\ncat(\"GOF parametric bootstrap p=value for the model is \")\n\nGOF parametric bootstrap p=value for the model is \n\n1 - mean(nb.devs &lt; deviance(model.fit4))\n\n[1] 0.441\n\nplot(predict(model.fit4), qresiduals(model.fit4))\n\n\n\n\nAfter we explore the possible relationships with the explanatory variables, we are interested to see if there are any quadratic relationships. From the gam plot(data.gam.fit), we can see that the edf of ejf_per is 2.4 while age is 1 so we need a quadratic term for ejf_per variable. We fitted the model with quadratic term (data.fit2) Comparing the AIC score between the the model without the quadratic term (data.fit1), we can see that the AIC score is smaller when there is a quadratic term for ejf_per variable.\nNext we are interested in whether there are interaction terms between different variables. From the data exploration, we can see that there are possible interactions between treatment with ejf_per, Diabetes and previous Dignoxin use. From the dredge function, we tried to find the best model according to the AIC scores, we selected the best 5 models and evaluted the p-values of each variables selected by the dredge function. We decided to select model 479 which is the 4th best model (model.fit4) based on the data exploration that the treatment group and ejection fraction seems to have interaction. There is a better model that included the mentioned interaction but it also included sex which from the p-value, it seems to have insignificant relationship with the dwhf so we decided to pick this model.\nwe conducted the model assumption and goodness of fit via randomised quantile residual plots as the data is sparse and parametric bootstrap. The randomised quantile residule showed an approximately normal distribution with small fraction of scatters over +/- 3 magnitude in y-axis. The p-value generated from parametric bootstrap suggests that there is no evidence model inadequate.\n\nlibrary(emmeans)\n\nWarning: package 'emmeans' was built under R version 4.3.2\n\nsummary(model.fit4)\n\n\nCall:\nglm(formula = dwhf ~ diabetes + diguse + ejf_per + I(ejf_per^2) + \n    trtmt + diabetes:trtmt + ejf_per:trtmt + 1, family = \"binomial\", \n    data = data.df)\n\nCoefficients:\n                                Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                     1.560287   0.327941   4.758 1.96e-06 ***\ndiabetesDiabetes               -0.233097   0.107130  -2.176  0.02957 *  \ndiguseYes                       0.452708   0.068819   6.578 4.76e-11 ***\nejf_per                        -0.113513   0.023203  -4.892 9.98e-07 ***\nI(ejf_per^2)                    0.001175   0.000405   2.902  0.00371 ** \ntrtmtDignoxin                  -0.972432   0.232999  -4.174 3.00e-05 ***\ndiabetesDiabetes:trtmtDignoxin  0.308636   0.153438   2.011  0.04428 *  \nejf_per:trtmtDignoxin           0.017607   0.007857   2.241  0.02504 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 5134.9  on 3999  degrees of freedom\nResidual deviance: 4920.4  on 3992  degrees of freedom\nAIC: 4936.4\n\nNumber of Fisher Scoring iterations: 4\n\nodds = exp(model.fit4$coefficients)\nodds\n\n                   (Intercept)               diabetesDiabetes \n                     4.7601860                      0.7920771 \n                     diguseYes                        ejf_per \n                     1.5725650                      0.8926928 \n                  I(ejf_per^2)                  trtmtDignoxin \n                     1.0011760                      0.3781623 \ndiabetesDiabetes:trtmtDignoxin          ejf_per:trtmtDignoxin \n                     1.3615664                      1.0177631 \n\nORs=exp(confint((model.fit4)))\n\nWaiting for profiling to be done...\n\nORs\n\n                                   2.5 %    97.5 %\n(Intercept)                    2.5096847 9.0827328\ndiabetesDiabetes               0.6413363 0.9762045\ndiguseYes                      1.3742534 1.7998615\nejf_per                        0.8528941 0.9341440\nI(ejf_per^2)                   1.0003811 1.0019711\ntrtmtDignoxin                  0.2393143 0.5966466\ndiabetesDiabetes:trtmtDignoxin 1.0077939 1.8392937\nejf_per:trtmtDignoxin          1.0022114 1.0335682\n\ncompare1 = emmeans(model.fit4, pairwise  ~ diabetes * trtmt, type = \"response\")\ncompare1$contrasts\n\n contrast                             odds.ratio    SE  df null z.ratio p.value\n Normal Placebo / Diabetes Placebo         1.263 0.135 Inf    1   2.176  0.1300\n Normal Placebo / Normal Dignoxin          1.597 0.130 Inf    1   5.767  &lt;.0001\n Normal Placebo / Diabetes Dignoxin        1.481 0.160 Inf    1   3.644  0.0015\n Diabetes Placebo / Normal Dignoxin        1.265 0.138 Inf    1   2.148  0.1381\n Diabetes Placebo / Diabetes Dignoxin      1.173 0.153 Inf    1   1.224  0.6115\n Normal Dignoxin / Diabetes Dignoxin       0.927 0.102 Inf    1  -0.688  0.9019\n\nResults are averaged over the levels of: diguse \nP value adjustment: tukey method for comparing a family of 4 estimates \nTests are performed on the log odds ratio scale \n\ntmp = summary(compare1$contrasts)\n\np1 = emmip (model.fit4, trtmt ~ ejf_per *diabetes, \nat = list(ejf_per = 3:45, diabetes = \"Normal\"), type = \"response\", CIs = TRUE) + xlab(\"Ejection Fraction\") + ylab(\"Probability\")+\nscale_x_discrete(breaks = paste(3:45, \"Normal\")[seq(from = 3, to = 45, by=5)], labels = c(3:45)\n[seq(from = 3, to=45, by = 5)]) + labs(color = 'treatment') + ggtitle(\"No Diabetes\")\n\np2 = emmip (model.fit4, trtmt ~ ejf_per *diabetes, \nat = list(ejf_per = 3:45, diabetes = \"Diabetes\"), type = \"response\", CIs = TRUE) + xlab(\"Ejection Fraction\") + ylab(\"Probability\")+\nscale_x_discrete(breaks = paste(3:45, \"Diabetes\")[seq(from = 3, to = 45, by=5)], labels = c(3:45)\n[seq(from = 3, to=45, by = 5)]) + labs(color = 'Treatment') + ggtitle(\"Diabetes\")\nggpubr::ggarrange(p1,p2, common.legend = TRUE, legend = \"bottom\")"
  },
  {
    "objectID": "stats_330.html#conclusion-1",
    "href": "stats_330.html#conclusion-1",
    "title": "Stats 330",
    "section": "conclusion",
    "text": "conclusion\nour final model is as following:\n$ logit(\\mu_i) = \\beta_0 + \\beta_1 \\times diabetes_i + \\beta_2 \\times diguse_i + \\beta_3 \\times ejf\\_per_i + \\beta_4 \\times ejf\\_per_i^2 + \\beta_4 \\times treatment_i + \\beta_5 \\times diabetes_i \\times treatment_i + \\beta_6 \\times ejf\\_per_i \\times treatment_i $ where the model is $ Y ~ Binomial (n_i, p_i) $\nOur final model was fitted in the binomial distribution. The logit $ \\mu_i $ is the log odds of death or hospitalization with heath failure.\nThe following betas are the dummy variable:\n\nbeta 1 is 1 when patient has a history of diabetes\nbeta 2 is 1 when patient has a history of previous Dignoxin use\nbeta 4 is 1 when patient allowcated to Dignoxin treatment group.\n\nFrom our analysis, the variables that affect the probability of death or hospitalization with heath failure are: history of diabetes, dignoxin within past week, ejection rate and the treatment. We have ommited age and gender where the p-value showed insignificant relationship on the odds of death or hospitalisation with heart failure. The research question was interested in whether taking dignosin can change the rate of death or hospitalization due to heath failure. From our analysis, we found that there are interactions between the treatment with history of diabetes and treatment with ejection fraction.\nAt the average ejection fraction (28.64%):\n\nThe patient that has diabetes history, the odds ratio of death or hospitalization with heath failure is 1.17 so the effect of treatment is similar between the two groups.\nThe patient with no history of diabetes, the odds ration of death or hospitalization with heart failure is 1.5 which means that the odds of death or hospitalization with heart failure is higher in the placebo group compares to the Dignoxin group.\nTthe odds ration of death or hospitalization with heart failure is estimated to be 1.01 - 1.83 more when the patient have diabetes history and treatment is dignoxin.\n\nWhen the patient has no diabetes history:\n\nThe lower the ejection fraction, the odds ration of death or hospitalization with heart failure in both placebo and dignoxin but the placebo group has the higer odds than the dignoxin group.\nAs the ejection fraction increases, the odds also decreases\nAt the ejection fraction of 45%, the odds are almost the same in both treatment group but the placebo is slightly higher.\n\nWhen the patient has diabetes history:\n\nThe lower the ejection fraction, the odds ration of death or hospitalization with heart failure in both placebo and dignoxin but the placebo group has the higer odds than the dignoxin group.\nAs the ejection fraction increases, the odds also decreases\nHowever, as approximately 30% ejection fraction, the odds have become equivalent in both groups."
  }
]